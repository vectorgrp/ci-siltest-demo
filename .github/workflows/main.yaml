name: call-workflow

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  
jobs:
  build-sut:
    runs-on: vtt-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Cache SUT
        id: cache-sut
        uses: actions/cache@v4
        with:
          path: |
            ./ECU/SUT
          key: ${{ hashFiles('./ECU/**') }}

      - name: Cache BSW
        id: cache-bsw
        uses: actions/cache@v4
        with:
          path: |
            ./ECU/Appl/GenDataVTT
          key: ${{ hashFiles('./ECU/LightControl.dpa','./ECU/Config') }}

      - name: Run DaVinci & VTT
        if: steps.cache-sut.outputs.cache-hit != 'true'
        env:
          cacheBSW: ${{ steps.cache-bsw.outputs.cache-hit }}
        run: |
          if ($env:cacheBSW -ne 'true'){
            VttMake make ./ECU/LightControl.vttmake;
          }
          else {
            VttMake make ./ECU/LightControl.vttmake --excludeDVCfgCmd; 
          }
          if(-Not $?)
          {
            Write-Host "VttMake step failed." -ForegroundColor red
            Exit -1
          }       

      - name: Export ECU/SUT
        uses: actions/upload-artifact@v4
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: SUT
          path: ./ECU/SUT
          retention-days: 7
      - name: Check dll 
        run : ls ECU/SUT/
          
  compile-simulation:
    #needs: [build-sut]
    runs-on: canoe-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v4
        with:
          name: SUT
          path: ECU/SUT     
        env:
          http_proxy: ""
          https_proxy: ""
      
      - name: Compile simulation
        run: |
            environment-make -o ./build -A Win32 ./environment-make/venvironment.yaml;
            test-unit-make -e ./build/Default.venvironment -o ./build/ ./test/auto/auto.vtestunit.yaml ./test/basic/basic.vtestunit.yaml;
      - name: Export build outputs
        uses: actions/upload-artifact@v4
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: build-outputs
          path: ./build/
          retention-days: 7
 
  run-tests-simulation:
    needs: compile-simulation
    runs-on: canoe-staging
    strategy:
      matrix:
        TESTNAME: [auto, basic]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v4
        with:
          name: SUT
          path: ECU/SUT        
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch venvironment artifact
        uses: actions/download-artifact@v4
        with:
          name: build-outputs
          path: build       
        env:
          http_proxy: ""
          https_proxy: ""
      - name: run_canoe
        id: canoe
        run : |
          canoe4sw-se ./build/Default.venvironment -d ./testresult-${{ matrix.TESTNAME }}.vtestunit --win32 --port-rtk-api none --test-unit ./build/${{ matrix.TESTNAME }}.vtestunit;
          echo "The last exit code is  $LASTEXITCODE"

      - name: Export Test Reports
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Test Reports ${{ matrix.TESTNAME }}
          path: |
            ./testresult-${{ matrix.TESTNAME }}.vtestunit/TestReports/
          retention-days: 7
      - name: Upload wlog Text Files
        if: ${{ !cancelled() && steps.convertLogFiles.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        env:
          # Explicitly disable the Proxy, as NODE seems to ignore no_proxy
          http_proxy: ""
          https_proxy: ""
        with:
          name: Wlog Files ${{ matrix.TESTNAME }}
          path: ./testresult-${{ matrix.TESTNAME }}.vtestunit\*.txt

  display-test-report:
    if: ${{ needs.run-tests-simulation.result != 'skipped' && !cancelled() }}
    needs: run-tests-simulation
    runs-on: canoe-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Fetch testreport auto artifact
        uses: actions/download-artifact@v4
        with:
          name: Test Reports auto
          path: ./TestReportsAuto/    
      - name: Fetch testreport basic artifact
        uses: actions/download-artifact@v4
        with:
          name: Test Reports basic
          path: ./TestReportsBasic/     
        env:
          http_proxy: ""
          https_proxy: "" 
      
      - name: Convert Test Report to XUnit basic
        if: ${{ !cancelled() }}
        run: |
          write-host "Converting ./TestReports/basic.vtestreport to ./TestReports/basic_xunit.xml"
          ReportViewerCli -r "./TestReports/basic.vtestreport" -xu "./TestReports/basic_xunit.xml"
      
      - name: Convert Test Report to XUnit auto
        if: ${{ !cancelled() }}
        uses: ./.github/actions/convert-vtestreport-to-xunit
        with:
          vTestReportInputFile: "./TestReports/auto.vtestreport"
          xUnitOutputFile: "./TestReports/auto_xunit.xml"
      - name: Merge Test Reports
        shell: pwsh
        run: |
          $targetDir = "./TestReports"
          if (-not (Test-Path $targetDir)) {
            New-Item -ItemType Directory -Path $targetDir
          }
          $sourceDirs = @("./TestReportsAuto/TestReports", "./TestReportsBasic/TestReports")
          foreach ($dir in $sourceDirs) {
            Get-ChildItem -Path $dir -Filter "*_xunit.xml" -Recurse | ForEach-Object {
              Copy-Item -Path $_.FullName -Destination $targetDir
            }
          }
      - uses: dorny/test-reporter@v1
        with:
          fail-on-error: "false"
          name: CANoe4SW_SE Tests                   # Name of the check run which will be created
          path: "TestReports/*_xunit.xml"  # Path to test results
          reporter: java-junit                      # Format of test results
        env:
          # Explicitly disable the Proxy, as NODE seems to ignore no_proxy
          http_proxy: ""
          https_proxy: ""

